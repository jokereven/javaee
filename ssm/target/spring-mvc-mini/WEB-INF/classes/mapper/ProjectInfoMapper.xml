<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="github.com.jokereven.dao.ProjectInfoMapper">
  <resultMap id="BaseResultMap" type="github.com.jokereven.entity.ProjectInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="pi_id" jdbcType="INTEGER" property="piId" />
    <result column="pi_projectName" jdbcType="VARCHAR" property="piProjectname" />
    <result column="pi_startDate" jdbcType="TIMESTAMP" property="piStartdate" />
    <result column="pi_endDate" jdbcType="TIMESTAMP" property="piEnddate" />
    <result column="pi_status" jdbcType="INTEGER" property="piStatus" />
    <result column="acId" jdbcType="INTEGER" property="acid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    pi_id, pi_projectName, pi_startDate, pi_endDate, pi_status, acId
  </sql>
  <select id="selectByExample" parameterType="github.com.jokereven.entity.ProjectInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from projectinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from projectinfo
    where pi_id = #{piId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from projectinfo
    where pi_id = #{piId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="github.com.jokereven.entity.ProjectInfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from projectinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="github.com.jokereven.entity.ProjectInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into projectinfo (pi_id, pi_projectName, pi_startDate, 
      pi_endDate, pi_status, acId
      )
    values (#{piId,jdbcType=INTEGER}, #{piProjectname,jdbcType=VARCHAR}, #{piStartdate,jdbcType=TIMESTAMP}, 
      #{piEnddate,jdbcType=TIMESTAMP}, #{piStatus,jdbcType=INTEGER}, #{acid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="github.com.jokereven.entity.ProjectInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into projectinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="piId != null">
        pi_id,
      </if>
      <if test="piProjectname != null">
        pi_projectName,
      </if>
      <if test="piStartdate != null">
        pi_startDate,
      </if>
      <if test="piEnddate != null">
        pi_endDate,
      </if>
      <if test="piStatus != null">
        pi_status,
      </if>
      <if test="acid != null">
        acId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="piId != null">
        #{piId,jdbcType=INTEGER},
      </if>
      <if test="piProjectname != null">
        #{piProjectname,jdbcType=VARCHAR},
      </if>
      <if test="piStartdate != null">
        #{piStartdate,jdbcType=TIMESTAMP},
      </if>
      <if test="piEnddate != null">
        #{piEnddate,jdbcType=TIMESTAMP},
      </if>
      <if test="piStatus != null">
        #{piStatus,jdbcType=INTEGER},
      </if>
      <if test="acid != null">
        #{acid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="github.com.jokereven.entity.ProjectInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from projectinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update projectinfo
    <set>
      <if test="record.piId != null">
        pi_id = #{record.piId,jdbcType=INTEGER},
      </if>
      <if test="record.piProjectname != null">
        pi_projectName = #{record.piProjectname,jdbcType=VARCHAR},
      </if>
      <if test="record.piStartdate != null">
        pi_startDate = #{record.piStartdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.piEnddate != null">
        pi_endDate = #{record.piEnddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.piStatus != null">
        pi_status = #{record.piStatus,jdbcType=INTEGER},
      </if>
      <if test="record.acid != null">
        acId = #{record.acid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update projectinfo
    set pi_id = #{record.piId,jdbcType=INTEGER},
      pi_projectName = #{record.piProjectname,jdbcType=VARCHAR},
      pi_startDate = #{record.piStartdate,jdbcType=TIMESTAMP},
      pi_endDate = #{record.piEnddate,jdbcType=TIMESTAMP},
      pi_status = #{record.piStatus,jdbcType=INTEGER},
      acId = #{record.acid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="github.com.jokereven.entity.ProjectInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update projectinfo
    <set>
      <if test="piProjectname != null">
        pi_projectName = #{piProjectname,jdbcType=VARCHAR},
      </if>
      <if test="piStartdate != null">
        pi_startDate = #{piStartdate,jdbcType=TIMESTAMP},
      </if>
      <if test="piEnddate != null">
        pi_endDate = #{piEnddate,jdbcType=TIMESTAMP},
      </if>
      <if test="piStatus != null">
        pi_status = #{piStatus,jdbcType=INTEGER},
      </if>
      <if test="acid != null">
        acId = #{acid,jdbcType=INTEGER},
      </if>
    </set>
    where pi_id = #{piId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="github.com.jokereven.entity.ProjectInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update projectinfo
    set pi_projectName = #{piProjectname,jdbcType=VARCHAR},
      pi_startDate = #{piStartdate,jdbcType=TIMESTAMP},
      pi_endDate = #{piEnddate,jdbcType=TIMESTAMP},
      pi_status = #{piStatus,jdbcType=INTEGER},
      acId = #{acid,jdbcType=INTEGER}
    where pi_id = #{piId,jdbcType=INTEGER}
  </update>
</mapper>